//    -login <username> <password>                                                  首次使用必须先登录, username为您的360用户名，pasword为您的用户登录密码
//    -importsign <keystore_path> <keystore_password> <alias> <alias_password>      导入签名信息。 keystore_path为密钥文件路径，keystore_password为密钥密码，alias为别名，alias_password为别名密码
//    -importmulpkg <mulpkg_filepath>                                               导入多渠道配置信息，txt格式
//    -showsign                                                                     查看已配置的签名信息
//    -showmulpkg                                                                   查看已配置的多渠道信息
//    -deletemulpkg                                                                 清除已配置的多渠道信息
//    -help                                                                         显示帮助信息
//    -showconfig                                                                   显示已配置加固项
//    -version                                                                      显示当前版本号
//    -update                                                                       升级到最新版本
//    -jiagu <inputAPKpath> <outputPath>                                            加固命令。inputAPKpath为待加固APK的路径，outputPath为保存加固后APK的路径
//    [-autosign]                                                           【可选】启用自动签名，需要先保存签名配置信息
//    [-automulpkg]                                                         【可选】启用自动生成多渠道包，需要先保存多渠道配置信息
//    [-pkgparam mulpkg_filepath]                                           【可选】启用自定义文件生成多渠道包，需要传入多渠道包配置文件
//
//    -config              配置加固可选项
//    ----------------------可选增强服务-------------------------------
//            [-x86]                    【支持X86平台】
//    [-nocert]                 【关闭签名校验】
//    [-analyse]                【加固数据分析】
//    [-crashlog]               【崩溃日志分析】
//    [-piracy]                 【盗版监测】
//    ----------------------高级加固服务-------------------------------
//            [-filecheck]              【文件完整性校验】
//    [-so]                     【SO保护】
//    [-string_obfus]           【字符串加密】
//    [-so_private]             【SO防盗用】
//    [-ptrace]                 【Ptrace防注入】
//    [-vmp]                    【全VMP保护】
//    [-vmpcustom]              【定制VMP保护】
//    [-dex2c]                  【Dex2C保护】
//    [-assets]                 【资源文件保护】
//    [-data]                   【本地数据文件保护】
//    [-dex_shadow]             【DexShadow】
//    [-customFilter]           【Dex定制加壳】
//    [-double_check]           【双开检测】
//    [-antiLog]                【日志防泄漏】
//    [-anti_screenshot]        【防截屏】
//    [-vmpLifeCycle]           【生命周期函数VMP保护】
//    [-vmpRegClass]            【整类VMP保护】
//    [-bypassfart]             【脱壳防护】
//    [-fartcheck]              【脱壳检测】
//
//    ----------------------高级加固服务可配置项-------------------------------
//            -config_so                    配置【SO保护】中需要加固的SO文件，以空格分隔。
//    -config_assets                配置【资源文件保护】中需要忽略的资源文件，以空格分隔。
//    -config_so_private            配置【SO防盗用】中需要进行防盗用处理的SO文件，以空格分隔。
//    -config_vmp                   配置【全VMP保护】中需要跳过VMP保护的类配置文件。
//    -config_shadow                配置【DexShadow】中需要跳过的类配置文件。
//    -config_dex                   配置【Dex定制加壳】的配置文件。
//    -config_vmp_custom            配置【定制VMP保护】中需要进行保护的类配置文件。


apply from:'../script/sign_config.gradle'

// 360加固配置信息
ext{
    signing = [
            keyAlias     : "$debug_keyAlias",
            keyPassword  : "$debug_keyPassword",
            storeFile    : "$debug_key_path",
            storePassword: "$debug_storePassword"
    ]

// app相关的配置
    app = [
            //默认release apk的文件路径，因为加固是基于release包的
            releasePath: "${project.buildDir}/intermediates/apk/release",
            //对release apk 加固后产生的加固apk地址
            packersPath: "${project.buildDir}/outputs/packers",
    ]

// 360加固配置
    packers = [account : '632275288@qq.com', //账号
               password: '',  //密码
               jarPath : "../360jiagu/jiagu.jar",  //执行命令的jar包路径
    ]
}

task protect360{
    dependsOn("assembleRelease")
    doLast{
        println 'packers===beginning 360 jiagu'
        def releaseApkDir = file(app["releasePath"])
        def releaseApk = null
        releaseApkDir.eachFile { file ->
            if (file.isFile() && file.name.endsWith(".apk")) {
                releaseApk = file
                return
            }
        }
        def packerDir = new File(app["packersPath"])
        if (!packerDir.exists()) {
            packerDir.mkdirs()
        }
//        exec {
//            // 登录360加固保
//            executable = 'java'
//            args = ['-jar', packers["jarPath"], '-login', packers["account"], packers["password"]]
//        }
        exec {
            // 导入签名信息
            executable = 'java'
            args = ['-jar', packers["jarPath"], '-importsign', signing["storeFile"], signing["storePassword"], signing["keyAlias"], signing["keyPassword"]]
        }
        exec {
            // 查看360加固签名信息
            executable = 'java'
            args = ['-jar', packers["jarPath"], '-showsign']
        }
        exec {
            // 初始化加固服务配置
            executable = 'java'
            args = ['-jar', packers["jarPath"], '-config']
        }
        exec {
            // 执行加固，然后自动签名，若不采取自动签名，需要自己通过build-tools命令自己签名
            executable = 'java'
            args = ['-jar', packers["jarPath"], '-jiagu', releaseApk.absolutePath, app["packersPath"], '-autosign']
        }
        println 'packers===360 jiagu finished'
        println "packers===360 jiagu path ${app["packersPath"]}"
    }
}